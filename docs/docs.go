// Package docs GENERATED BY SWAG; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/v1/cars": {
            "get": {
                "description": "Fetch Car",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cars"
                ],
                "summary": "Fetch Car",
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            },
            "post": {
                "description": "Create Car",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cars"
                ],
                "summary": "Create Car",
                "parameters": [
                    {
                        "description": "Car to create",
                        "name": "car",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.CreateCarReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/cars/{id}": {
            "get": {
                "description": "Get Car",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cars"
                ],
                "summary": "Get Car",
                "parameters": [
                    {
                        "type": "string",
                        "description": "car id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            },
            "put": {
                "description": "Update Car",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cars"
                ],
                "summary": "Update Car",
                "parameters": [
                    {
                        "type": "string",
                        "description": "car id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Car to update",
                        "name": "car",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.UpdateCarReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            },
            "delete": {
                "description": "Delete Car",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cars"
                ],
                "summary": "Delete Car",
                "parameters": [
                    {
                        "type": "string",
                        "description": "car id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        }
    },
    "definitions": {
        "request.CreateCarReq": {
            "type": "object",
            "properties": {
                "make": { "type": "string"},
                "model": { "type": "string"},
                "package": { "type": "string"},
                "color": { "type": "string"},
                "year": { "type": "integer"},
                "category": { "type": "string"},
                "mileage": { "type": "integer"},
                "price": { "type": "integer"},
                "identification": { "type": "string"}
            }
        },
        "request.UpdateCarReq": {
            "type": "object",
            "properties": {
                "make": { "type": "string"},
                "model": { "type": "string"},
                "package": { "type": "string"},
                "color": { "type": "string"},
                "year": { "type": "integer"},
                "category": { "type": "string"},
                "mileage": { "type": "integer"},
                "price": { "type": "integer"},
                "identification": { "type": "string"}
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0.4",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "Go Boilerplate",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
